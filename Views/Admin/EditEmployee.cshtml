@model payfish.ViewModels.Admin.EditEmployeeViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "ویرایش اطلاعات کارمند";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>ویرایش اطلاعات کارمند</h2>
    <a href="@Url.Action("EmployeeList", "Admin")" class="btn btn-secondary">بازگشت به لیست</a>
</div>

<div class="row">
    <!-- فرم ویرایش اطلاعات -->
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header fw-bold">اطلاعات کارمند</div>
            <div class="card-body">
                <form asp-action="EditEmployee" method="post">
                    <input type="hidden" asp-for="Id" />

                    <div class="mb-3">
                        <label class="form-label">نام کامل</label>
                        <input asp-for="FullName" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">کد ملی</label>
                        <input asp-for="Code" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">سمت</label>
                        <input asp-for="Position" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">تاریخ استخدام</label>
                            <!-- ورودی قابل دید کاربر -->
                        <input id="hireDatePicker" class="form-control" />
                            <!-- ورودی مخفی که به مدل ارسال می‌شود -->
                        <input type="hidden" name="HireDate" id="HireDate" />
                     </div>

                    <button type="submit" class="btn btn-success">ذخیره تغییرات</button>
                </form>
            </div>
        </div>
    </div>

    <!-- جدول روزهای مرخصی -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header fw-bold d-flex justify-content-between">
                روزهای مرخصی
                <a href="@Url.Action("AddLeaveDay", "Admin", new { employeeId = Model.Id })" class="btn btn-sm btn-primary">
                    <i class="fas fa-plus"></i> افزودن مرخصی
                </a>
            </div>
            <div class="card-body">
                @if (Model.LeaveDays != null && Model.LeaveDays.Any())
                {
                    <table class="table table-striped table-sm">
                        <thead>
                            <tr>
                                <th>تاریخ</th>
                                <th>توضیح</th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var leave in Model.LeaveDays)
                            {
                                <tr>
                                    <td>@leave.Date.ToString("yyyy/MM/dd")</td>
                                    <td>@leave.Description</td>
                                    <td>
                                        <a class="btn btn-sm btn-outline-secondary" href="@Url.Action("EditLeaveDay", "Admin", new { id = leave.Id })">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a class="btn btn-sm btn-outline-danger" href="@Url.Action("DeleteLeaveDay", "Admin", new { id = leave.Id })">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-muted">مرخصی‌ای ثبت نشده است.</p>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            const currentHireDate = "@(Model.HireDate > DateTime.MinValue ? Model.HireDate.ToString("yyyy/MM/dd") : "")";

            $("#hireDatePicker").persianDatepicker({
                format: 'YYYY/MM/DD',
                altField: '#HireDate',
                altFormat: 'YYYY-MM-DD',
                observer: true,
                autoClose: true,
                initialValue: true,
                initialValueType: 'gregorian',
            });

            // مقداردهی اولیه
            if (currentHireDate) {
                $("#hireDatePicker").persianDatepicker('setDate', currentHireDate);
                $("#HireDate").val(currentHireDate); // مقدار پیش‌فرض در hidden input
            }

            // اطمینان از مقداردهی صحیح قبل از ارسال فرم
            $("form").submit(function () {
                const altVal = $("#hireDatePicker").persianDatepicker('getState').selected.unixDate;
                if (altVal) {
                    let miladi = new persianDate(altVal).toCalendar('gregorian').format('YYYY-MM-DD');
                    $("#HireDate").val(miladi);
                }
            });
        });
    </script>
}


